{"version":3,"sources":["../../src/plugins/withInternal.ts"],"names":["EXPO_DEBUG","withInternal","config","isDebug","internals"],"mappings":";;;;;;;;;;;;;;;AACA,SAAA,OAAA,GAAA;AAAA,MAAA,IAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AAAA,EAAA,OAAA,GAAA,mBAAA;AAAA,WAAA,IAAA;AAAA,GAAA;;AAAA,SAAA,IAAA;AAAA;;AAIO,IAAMA,UAAU,GAAG,CAAA,GAAA,OAAA,GAAA,OAAA,EAAA,YAAA,EAAnB,KAAmB,CAAnB;;;AAQA,IAAMC,YAEZ,GAAG,SAFSA,YAET,CAAA,MAAA,EAAA,SAAA,EAAuB;AACzB,MAAI,CAACC,MAAM,CAAX,SAAA,EAAuB;AACrBA,IAAAA,MAAM,CAANA,SAAAA,GAAAA,EAAAA;AACD;;AAEDA,EAAAA,MAAM,CAANA,SAAAA;AACEC,IAAAA,OAAO,EADU;AAAnBD,KAEKA,MAAM,CAFQ,SAAnBA,GAGKE,SAHLF;AAMA,SAAA,MAAA;AAbK,CAAA","sourcesContent":["import { ConfigPlugin } from '@expo/config-plugins';\nimport { boolish } from 'getenv';\n\nimport { ConfigFilePaths } from '../Config.types';\n\nexport const EXPO_DEBUG = boolish('EXPO_DEBUG', false);\n\n/**\n * Adds the _internal object.\n *\n * @param config\n * @param projectRoot\n */\nexport const withInternal: ConfigPlugin<\n  { projectRoot: string; packageJsonPath?: string } & Partial<ConfigFilePaths>\n> = (config, internals) => {\n  if (!config._internal) {\n    config._internal = {};\n  }\n\n  config._internal = {\n    isDebug: EXPO_DEBUG,\n    ...config._internal,\n    ...internals,\n  };\n\n  return config;\n};\n"]}